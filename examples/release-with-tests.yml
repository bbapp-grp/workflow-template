name: Release Build with Tests

on:
  push:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Add your service-specific testing steps here
      # This is the same as development but often more thorough for releases
      
      # Node.js example:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run unit tests
        run: npm test
      
      - name: Run linting
        run: npm run lint
      
      - name: Run type checking
        run: npm run type-check
      
      - name: Run integration tests
        run: npm run test:integration
        continue-on-error: false  # Fail release if integration tests fail
      
      # Go example (uncomment if using Go):
      # - name: Set up Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: '1.21'
      # 
      # - name: Run tests with coverage
      #   run: go test -v -race -coverprofile=coverage.out ./...
      # 
      # - name: Run linting
      #   run: golangci-lint run
      # 
      # - name: Run security scan
      #   run: gosec ./...

  build:
    name: Build and Push
    needs: test  # Wait for tests to pass
    if: success()  # Only build if tests passed
    
    uses: bbapp-grp/workflow-template/.github/workflows/release-build.yml@main
    with:
      service_name: ${{ github.event.repository.name }}
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      # Optional: dockerfile_path: "docker/Dockerfile"
      # Optional: build_context: "."
      # Optional: tag_prefix: "v"
    secrets:
      WIF_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      WIF_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
