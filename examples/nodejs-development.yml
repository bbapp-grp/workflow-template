# Node.js Development Workflow with Testing
name: Development Build

on:
  push:
    branches: [ develop ]

jobs:
  test:
    name: Run Tests
    uses: bbapp-grp/workflow-template/.github/workflows/nodejs-test.yml@main
    with:
      node_version: '20'
      test_command: 'npm test'
      lint_command: 'npm run lint'
      type_check_command: 'npm run type-check'
      enable_lint: true
      enable_type_check: true

  build:
    name: Build and Push
    needs: test
    if: success()
    
    uses: bbapp-grp/workflow-template/.github/workflows/development-build.yml@main
    with:
      service_name: ${{ github.event.repository.name }}
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
    secrets:
      WIF_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      WIF_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  # Direct deployment to development environment
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: development
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ vars.GKE_CLUSTER_NAME }} --zone=${{ vars.GCP_ZONE }} --project=${{ vars.GCP_PROJECT_ID }}

      - name: Deploy to development
        run: |
          # Update image tag in the deployment
          export NEW_IMAGE="asia-south1-docker.pkg.dev/bb-app-461714/bbapp-images/${{ github.event.repository.name }}:develop-${{ github.sha }}"
          kubectl set image deployment/${{ github.event.repository.name }} ${{ github.event.repository.name }}=$NEW_IMAGE -n development
          kubectl rollout status deployment/${{ github.event.repository.name }} -n development --timeout=300s
